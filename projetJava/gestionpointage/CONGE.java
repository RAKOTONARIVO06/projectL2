package gestionpointage;


import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author RAKOTONARIVO
 */
public class CONGE extends javax.swing.JFrame {

    /**
     * Creates new form CONGE
     */
    public CONGE() {
        initComponents();
        select();
    }
    java.util.Date dateDem,dateRet;
    java.sql.Date sqlDateDem,sqlDateRet;
    Connection conn=null;
    Statement stat=null;
    ResultSet res=null;
    String requete=null;
    
     public void select(){
        try{
         Class.forName("org.postgresql.Driver");
       }catch(ClassNotFoundException e){
           System.out.print("Erreur");
       }

        //Créer l'objet de connéction
      String urlDeConnection="jdbc:postgresql://localhost:5432/gestionPointage";
      String username="postgres";
      String password="narivo";
      String requete="select * from conge";
      try {
      conn = DriverManager.getConnection(urlDeConnection, username, password);
     // requete = "INSERT INTO medicament VALUES('ra', 'et', 13,1)";

     stat = conn.createStatement();
     res = stat.executeQuery(requete);
     // Statement stmt = conn.createStatement();
     
      table.setModel( DbUtils.resultSetToTableModel(res));

    //System.out.println(rowsAffected + " ligne(s) insérée(s) avec succès.");
      } catch (SQLException e) {
      System.out.println("Erreur lors de l'affichage dans la base de données : " + e.getMessage());
      }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        id_conge = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nbreJr = new javax.swing.JTextField();
        id_empl = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        motif = new javax.swing.JTextField();
        supprimer = new javax.swing.JButton();
        ajouter = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        canvas1 = new java.awt.Canvas();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        dateDemande = new com.toedter.calendar.JDateChooser();
        dateRetour = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("motif :");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Congé personnels");

        id_conge.setBackground(new java.awt.Color(204, 204, 204));
        id_conge.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        id_conge.setForeground(new java.awt.Color(51, 51, 51));
        id_conge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_congeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("num_Empl :");

        nbreJr.setBackground(new java.awt.Color(204, 204, 204));
        nbreJr.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        nbreJr.setForeground(new java.awt.Color(51, 51, 51));
        nbreJr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nbreJrActionPerformed(evt);
            }
        });

        id_empl.setBackground(new java.awt.Color(204, 204, 204));
        id_empl.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        id_empl.setForeground(new java.awt.Color(51, 51, 51));
        id_empl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_emplActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("nbre_Jr :");

        motif.setBackground(new java.awt.Color(204, 204, 204));
        motif.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        motif.setForeground(new java.awt.Color(51, 51, 51));
        motif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motifActionPerformed(evt);
            }
        });

        supprimer.setBackground(new java.awt.Color(153, 0, 0));
        supprimer.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        supprimer.setText("SUPPRIMER");
        supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supprimerMouseClicked(evt);
            }
        });

        ajouter.setBackground(new java.awt.Color(51, 51, 51));
        ajouter.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        ajouter.setText("AJOUTER");
        ajouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ajouterMouseClicked(evt);
            }
        });
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });

        modifier.setBackground(new java.awt.Color(0, 102, 102));
        modifier.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        modifier.setText("MODIFIER");
        modifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modifierMouseClicked(evt);
            }
        });

        table.setBackground(new java.awt.Color(153, 153, 153));
        table.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        table.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        table.setForeground(new java.awt.Color(102, 102, 102));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "num_CONGE", "num_Empl", "motif", "nbre_Jour", "date_Demande", "date_Retour"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table.setAlignmentX(1);
        table.setAutoscrolls(false);
        table.setFillsViewportHeight(true);
        table.setFocusCycleRoot(true);
        table.setFocusable(false);
        table.setGridColor(new java.awt.Color(204, 0, 51));
        table.setName(""); // NOI18N
        table.setRowHeight(25);
        table.setShowGrid(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("num_CONGE :");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("date_Retour:");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("date_Demande:");

        dateDemande.setBackground(new java.awt.Color(204, 204, 204));
        dateDemande.setForeground(new java.awt.Color(51, 51, 51));
        dateDemande.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N

        dateRetour.setBackground(new java.awt.Color(204, 204, 204));
        dateRetour.setForeground(new java.awt.Color(0, 0, 0));
        dateRetour.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(524, 524, 524)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(142, 142, 142)
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                                .addGap(0, 43, Short.MAX_VALUE)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                                .addComponent(jLabel9)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(id_conge, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(33, 33, 33)
                                                                .addComponent(jLabel5)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                                .addComponent(jLabel3)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(motif, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(39, 39, 39)))
                                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel4)
                                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                                .addComponent(id_empl, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(36, 36, 36)
                                                                .addComponent(jLabel10)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(dateRetour, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                                .addComponent(jLabel7)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(nbreJr, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(50, 50, 50)
                                                                .addComponent(jLabel11)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(dateDemande, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGap(28, 28, 28))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                                        .addComponent(ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(62, 62, 62)
                                                        .addComponent(modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(52, 52, 52)
                                                        .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(168, 168, 168)))))
                                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator2)
                                    .addComponent(jScrollPane1))))
                        .addGap(268, 268, 268))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(id_conge, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(id_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(21, 21, 21)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(nbreJr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(motif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(101, 101, 101))
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(dateDemande, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(supprimer)
                                                    .addComponent(modifier)
                                                    .addComponent(ajouter))
                                                .addGap(21, 21, 21))))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(dateRetour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(228, 228, 228))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 737, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1037, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("GESTION DE POINTAGE ET CONGE PERSONNEL");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(456, 456, 456)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void id_congeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_congeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_congeActionPerformed

    private void nbreJrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nbreJrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nbreJrActionPerformed

    private void id_emplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_emplActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_emplActionPerformed

    private void motifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motifActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_motifActionPerformed

    private void supprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supprimerMouseClicked
        // TODO add your handling code here:
        if(id_conge.getText().isEmpty()){
            String ref=  JOptionPane.showInputDialog(this,"Veuillez entrer l'ID de congé d'un employé que vous souhaitez supprimer :");
            try{
                Class.forName("org.postgresql.Driver");
            }catch(ClassNotFoundException e){
                System.out.print("Erreur");
            }
            //Créer l'objet de connéction
            String urlDeConnection="jdbc:postgresql://localhost:5432/gestionPointage";
            String username="postgres";
            String password="narivo";

            try {
                conn = DriverManager.getConnection(urlDeConnection, username, password);
                PreparedStatement add= conn.prepareStatement("DELETE FROM conge WHERE id_cong= ?");
                add.setString(1, ref);
                int rowsAffected = add.executeUpdate();
                if(rowsAffected==1){
                    JOptionPane.showMessageDialog(this," suppréssion avec succès");
                    conn.close();
                    select();
                }
                else{
                    JOptionPane.showMessageDialog(this,"Le personnel qui a le reference Congé "+ref+" n'éxiste plus dans la base");
                }
            } catch (SQLException e) {
                System.out.println("Erreur lors de la suppréssion dans la base de données : " + e.getMessage());
            }
        }else{
            try{
                Class.forName("org.postgresql.Driver");
            }catch(ClassNotFoundException e){
                System.out.print("Erreur");
            }
            //Créer l'objet de connéction
            String urlDeConnection="jdbc:postgresql://localhost:5432/gestionPointage";
            String username="postgres";
            String password="narivo";
            String id_e =id_conge.getText();

            try {
                conn = DriverManager.getConnection(urlDeConnection, username, password);
                PreparedStatement add= conn.prepareStatement("DELETE FROM conge WHERE id_cong= ?");
                add.setString(1, id_e);
                int rowsAffected = add.executeUpdate();
                if(rowsAffected==1){
                    JOptionPane.showMessageDialog(this," suppréssion avec succès");
                    conn.close();
                    id_conge.setText(null);
                    id_empl.setText(null);
                    nbreJr.setText(null);
                    motif.setText(null);
                    dateDemande.setDate(null);
                    dateRetour.setDate(null);
                    conn.close();
                    select();
                }
                else{
                    JOptionPane.showMessageDialog(this,"Le personnel qui a l'id de congé "+id_e+" n'éxiste plus dans la base");
                }
            } catch (SQLException e) {
                System.out.println("Erreur lors de la suppréssion dans la base de données : " + e.getMessage());
            }
        }
    }//GEN-LAST:event_supprimerMouseClicked

    private void ajouterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouterMouseClicked
        // TODO add your handling code here:
        
        try{
            Class.forName("org.postgresql.Driver");
        }catch(ClassNotFoundException e){
            System.out.print("Erreur");
        }

        //Créer l'objet de connéction
        String urlDeConnection="jdbc:postgresql://localhost:5432/gestionPointage";
        String username="postgres";
        String password="narivo";
        dateDem= dateDemande.getDate();
        sqlDateDem= new java.sql.Date(dateDem.getTime());
        dateRet= dateRetour.getDate();
        sqlDateRet= new java.sql.Date(dateRet.getTime());
        
        if(id_conge.getText().isEmpty()|| id_empl.getText().isEmpty()|| nbreJr.getText().isEmpty()|| motif.getText().isEmpty()
        || dateDemande.getDate()== null || dateRetour.getDate() == null){
            JOptionPane.showMessageDialog(this,"Veuillez remplir tous les champs");
        }else{

            try {
                conn = DriverManager.getConnection(urlDeConnection, username, password);
                String idConge = id_conge.getText();
                String idEmpl = id_empl.getText();
                String motifs = motif.getText();
                int nbreJrs = Integer.parseInt(nbreJr.getText());
             

            // Vérifier si l'employé existe dans la table "employe"
            String sqlCheckEmployee = "SELECT idempl FROM employe WHERE idempl = ? ";
            PreparedStatement checkEmployee = conn.prepareStatement(sqlCheckEmployee);
            checkEmployee.setString(1, idEmpl);
            ResultSet employeeResult = checkEmployee.executeQuery();

           if (employeeResult.next()) {
         // L'employé existe, nous pouvons procéder à l'insertion dans la table "conge"
          String sqlInsertConge = "INSERT INTO conge (id_cong, id_empl, motif, nbre_jr, date_demande, date_retour) VALUES (?, ?, ?, ?, ?, ?)";
          PreparedStatement add = conn.prepareStatement(sqlInsertConge);
          add.setString(1, idConge);
          add.setString(2, idEmpl);
          add.setString(3, motifs);
          add.setInt(4, nbreJrs);
          add.setDate(5, sqlDateDem);
          add.setDate(6, sqlDateRet);

          int rowsAffected = add.executeUpdate();
          if (rowsAffected==1){
                    JOptionPane.showMessageDialog(this,"Enregistrer avec succès");
                    System.out.println("INSERER AVEC SUCCESS");
                    id_conge.setText(null);
                    id_empl.setText(null);
                    nbreJr.setText(null);
                    motif.setText(null);
                    dateDemande.setDate(null);
                    dateRetour.setDate(null);
                    conn.close();
                    select();
                }
          if(rowsAffected!=1){
                    JOptionPane.showMessageDialog(this,"L'id que vous avez entré ne corresopond aucun personnel!");
          }
          
        // Ici, vous pouvez traiter le résultat de l'insertion selon vos besoins
         } else {
        // L'employé n'existe pas dans la table "employe", affichez un message d'erreur ou prenez une action appropriée
        JOptionPane.showMessageDialog(this,"L'employé avec l'idempl " + idEmpl + " n'existe pas dans la table employe");
         System.out.println("L'employé avec l'idempl " + idEmpl + " n'existe pas dans la table employe.");
        }
      } catch (SQLException e) {
          JOptionPane.showMessageDialog(this,"Vous avez entré la meme clé primaire que l avant");
        
          System.out.println("Erreur lors de l'insertion dans la base de données : " + e.getMessage());
      }

      }
    }//GEN-LAST:event_ajouterMouseClicked

    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ajouterActionPerformed

    private void modifierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifierMouseClicked
        // TODO add your handling code here:
        if(id_conge.getText().isEmpty()|| id_empl.getText().isEmpty()|| nbreJr.getText().isEmpty()|| motif.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Veuillez remplir touts les champs");
        }else{
            try{
                Class.forName("org.postgresql.Driver");
            }catch(ClassNotFoundException e){
                System.out.print("Erreur");
            }

            //Créer l'objet de connéction
            String urlDeConnection="jdbc:postgresql://localhost:5432/gestionPointage";
            String username="postgres";
            String password="narivo";
             dateDem= dateDemande.getDate();
             sqlDateDem= new java.sql.Date(dateDem.getTime());
             dateRet= dateRetour.getDate();
             sqlDateRet= new java.sql.Date(dateRet.getTime());
            try {
                conn = DriverManager.getConnection(urlDeConnection, username, password);
                //PreparedStatement add= conn.prepareStatement("update conge set id_empl=?, nbre_jr=?,motif=?,date_demande=?,date_retour=? where id_cong=?");
               // add.setInt(2,Integer.valueOf(nbreJr.getText()));
               // add.setString(3,motif.getText());
                //add.setString(4, dateDemande.getText());
               // add.setString(5, dateRetour.getText());
               // add.setString(6,id_conge.getText());
               // add.setString(1,id_empl.getText());
               // Récupérer les valeurs des champs de saisie
             String idConge = id_conge.getText();
             String idEmpl = id_empl.getText();
             String motifs = motif.getText();
             int nbreJrs = Integer.parseInt(nbreJr.getText());
             

             // Vérifier si l'employé existe dans la table "employe"
              String sqlCheckEmployee = "SELECT idempl FROM employe WHERE idempl = ?";
              PreparedStatement checkEmployee = conn.prepareStatement(sqlCheckEmployee);
              checkEmployee.setString(1, idEmpl);
              ResultSet employeeResult = checkEmployee.executeQuery();

              if (employeeResult.next()) {
              // L'employé existe, nous pouvons procéder à la mise à jour dans la table "conge"
              String sqlUpdateConge = "UPDATE conge SET id_empl = ?, motif = ?, nbre_jr = ?, date_demande = ?, date_retour = ? WHERE id_cong = ? ";
              PreparedStatement updateConge = conn.prepareStatement(sqlUpdateConge);
              updateConge.setString(2, motifs);
              updateConge.setInt(3, nbreJrs);
              updateConge.setDate(4, sqlDateDem);
              updateConge.setDate(5, sqlDateRet);
              updateConge.setString(6, idConge);
              updateConge.setString(1, idEmpl);

              int rowsAffected = updateConge.executeUpdate();
              // Ici, vous pouvez traiter le résultat de la mise à jour selon vos besoins
              if(rowsAffected==1){
                    JOptionPane.showMessageDialog(this,"Modification avec succes");
                    id_conge.setText(null);
                    id_empl.setText(null);
                    nbreJr.setText(null);
                    motif.setText(null);
                    dateDemande.setDate(null);
                    dateRetour.setDate(null);
                    conn.close();
                    select();
                }else{

                    JOptionPane.showMessageDialog(this,"Entrer l'ID valide et existe");
                }
              } else {
              // L'employé n'existe pas dans la table "employe", affichez un message d'erreur ou prenez une action appropriée
              System.out.println("L'employé avec l'idempl " + idEmpl + " n'existe pas dans la table employe.");
              }
            } catch (SQLException e) {
                System.out.println("Erreur lors de la modification données : " + e.getMessage());
            }

        }
    }//GEN-LAST:event_modifierMouseClicked

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int myIndex=table.getSelectedRow();
        id_conge.setText(model.getValueAt(myIndex,0).toString());
        id_empl.setText(model.getValueAt(myIndex,1).toString());
        nbreJr.setText(model.getValueAt(myIndex,2).toString());
        motif.setText(model.getValueAt(myIndex,3).toString());
        
        try {
    String dateRetourStr = model.getValueAt(myIndex, 4).toString();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Date dateRetour = dateFormat.parse(dateRetourStr);
    this.dateRetour.setDate(dateRetour);
} catch (Exception ex) {
    // Gérer l'erreur de parsing si la date n'est pas dans le bon format
}

// Récupérer la valeur de la colonne 5 (dateDemande) et la convertir en objet Date
try {
    String dateDemandeStr = model.getValueAt(myIndex, 5).toString();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Date dateDemande = dateFormat.parse(dateDemandeStr);
    this.dateDemande.setDate(dateDemande);
} catch (Exception ex) {
    // Gérer l'erreur de parsing si la date n'est pas dans le bon format
}
    }//GEN-LAST:event_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CONGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CONGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CONGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CONGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CONGE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ajouter;
    private java.awt.Canvas canvas1;
    private com.toedter.calendar.JDateChooser dateDemande;
    private com.toedter.calendar.JDateChooser dateRetour;
    private javax.swing.JTextField id_conge;
    private javax.swing.JTextField id_empl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JButton modifier;
    private javax.swing.JTextField motif;
    private javax.swing.JTextField nbreJr;
    private javax.swing.JButton supprimer;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

   
}
